<section class="breadcrumb-option">
  <!-- Breadcrumb code remains unchanged -->
</section>

<div class="container d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
  <h1 class="h2">
    <%= locals.title ? locals.title : 'Dashboard' %>
  </h1>
</div>

<div class="card container py-5 w mb-5 col-lg-6">
  <h3 class="mb-3 card-title text-center">Add New Category</h3>
  <form class="card-body rounded-3 bg-body-tertiary"  id="add-category">
    <!-- Name input -->
    <div class="err mb-3 text-danger"></div>
    <div class="row mb-3">
      <div class="form-group my-3">
        <label class="form-label" for="categoryname">Category Name</label>
        <input type="text" class="form-control " name="categoryname" id="categoryname">
      </div>
        <!-- <input type="text" class="form-control " name="id"  id="category-id" style="display: none;"> -->
      
    </div>
    <!-- Submit button -->
    <div class="button-grp">
      <!-- Green button inside the form -->
      <button type="submit" class="btn btn-sm btn-success px-3">Submit</button>
      <button type="reset" class="btn btn-sm btn-warning px-3">Clear</button>
    </div>
  </form>
 
</div>
<script defer>
  const editform = document.getElementById("add-category");
editform.addEventListener("submit", function (event) {
    event.preventDefault()

    Swal.fire({
        title: "Are you sure?",
        text: "You want to add new Category?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#0061bc",
        cancelButtonColor: "rgb(128, 128, 128)",
        confirmButtonText: "Yes",
    }).then(async (result) => {
        if (result.isConfirmed) {
            try {
                // const categoryIdInput = document.getElementById("category-id"); 
                // const categoryId = categoryIdInput.value.trim(); 

                const formData = new FormData(editform);
                  console.log(formData)
                  
                const categoryInput = document.getElementById("edit-category")
                const category = categoryInput.value
                console.log(categoryInput);

                
                const categorystatusSelect = document.getElementById("category-status")
                const categorystatus = categorystatusSelect.value.trim()

                const id = document.getElementById("category-id")
                const body = JSON.stringify({ category, status: categorystatus })
                if (category === "") {
                    error.innerHTML = "category field can't be empty"
                    return;
                }


                let res = await fetch(
                    `/admin/category/add-category/${id}`,
                    {
                        method: "POST",
                        body: body, id,
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    }
                );
                let data = await res.json();
                if (data.success) {
                    Swal.fire(
                        "Created!",
                        "New category has been created successfully.",
                        "success"
                    ).then(() =>
                        location.assign("/admin/category")
                    );
                } else {
                    throw new Error(data.error);
                }
            } catch (e) {
                console.log(e)
                Swal.fire("Error!", e.message, "error");
            }
        }
    });
})
</script>
<style>
  .error {
    color: rgb(255, 0, 0);
  }

  .crop-banner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 4;
    width: 30rem;
  }

  /* Style for green button */
  .btn-success {
    background-color: green;
    color: white;
  }
</style>
